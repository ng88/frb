DefLang EN



Public Class Main

    Public Shared Sub main()
    
        Dim t1 As Test := New Test<Int>()
        Dim t2 As Test := New Test<Boolean>()
        Dim t3 As Test := New Test<String>()
        Dim t4 As Test := New Test< Test<Int> >()
        
        
    End Sub
    
    
End Class

'  idée d'implémentation des template
'
'
'  lors de la définition des classes on injecte des faux type (instances bidons de frbclass)
'  pour chaque argument template
'
' lors de l'utilisation, on regarde si NomClasse#valeurParam1 existe si oui c'est bien
' sinon il faut le creer par recopie de NomClasse en remplacant les instances bidons par
' le bon type et on resolveAndCheck
' (pour pas prendre de place utiliser une autre classe vide a la place de FrbClass et forcer la convertion)



Public Class Test<T>

    Protected elmt As T := Nothing
    
    Public Sub Initialize()

    End Sub
    
    Public Sub setElement(e As T)
        elmt := e
    End Sub
    
    Public Function element() As T
        Return elmt
    End Function

End Class
