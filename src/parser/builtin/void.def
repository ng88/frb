/***************************************************************************
 *   This file is part of the FrB project                                  *
 *                                                                         *
 *   FrB project                                                           *
 *                                                                         *
 *   Copyright (C) 2006, 2007 by GUILLAUME Nicolas                         *
 *   ng@ngsoft-fr.com                                                      *
 *                                                                         *
 *   http://frb.ngsoft-fr.com/                                             *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; version 2 of the License only.          *
 *   See the COPYING file.                                                 *
 ***************************************************************************/






/*                   FrBVoid                       */
FrBCppClass * FrBVoid::_cpp_class = 0;




FrBCppClass * FrBVoid::initClass()
{
    frb_assert2(_cpp_class == 0, "FrBVoid::initClass(), already initialized");
    
    _cpp_class = new FrBCppClass(new FrBVoid::Allocator());
    _cpp_class->setName("Void");
    _cpp_class->setSealed(true);
    _cpp_class->setScope(SC_PUBLIC);
    
    return _cpp_class;
}

FrBClass * FrBVoid::getClass()
{
    frb_assert2(_cpp_class != 0, "FrBVoid::getClass(), call initClass() first");
    return _cpp_class;
}

FrBVoid::~FrBVoid()
{
}

FrBVoid * FrBVoid::Allocator::_void_value = 0;

FrBVoid * FrBVoid::Allocator::getInstance()
{
    if(!_void_value)
        _void_value = new FrBVoid();
        
    return _void_value;
}

FrBCppObject * FrBVoid::Allocator::createObject() const
{
    return getInstance();
}


    

