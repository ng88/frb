/***************************************************************************
 *   This file is part of the FrB project                                  *
 *                                                                         *
 *   FrB project                                                           *
 *                                                                         *
 *   Copyright (C) 2006, 2007 by GUILLAUME Nicolas                         *
 *   ng@ngsoft-fr.com                                                      *
 *                                                                         *
 *   http://frb.ngsoft-fr.com/                                             *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; version 2 of the License only.          *
 *   See the COPYING file.                                                 *
 ***************************************************************************/


/*            FrBBoolean            */


FrBBaseObject * operator_not_FrBBool(FrBExecutionEnvironment& e, FrBBaseObject * me)
{
    return e.addGarbagedObject(new FrBBool( ! static_cast<FrBBool*>(me)->value() ));
}

FrBCppClass * FrBBaseBool::initClass()
{
    frb_assert2(_cpp_class == 0, "FrBBool::initClass(), already initialized");
    
    _cpp_class = new FrBCppClass(new FrBPrimitive::Allocator());
    _cpp_class->setName("Bool");
    //_cpp_class->setShared(false);
    //_cpp_class->setAbstract(false);
    _cpp_class->setSealed(true);
    _cpp_class->setScope(SC_PUBLIC);
    
    FrBFunction * f = new FrBNoParamCppFunction(operator_not_FrBBool);
    f->setReturnType(_cpp_class);
    f->setName("operator Not()");
    f->setScope(SC_PUBLIC);
    f->setConst(true);
    _cpp_class->addOperator(FrBKeywords::FRB_KW_OP_LOG_NOT, f);
    
    return _cpp_class;
}


FrBBool * FrBBool::_trueValue = new FrBBool(true);
FrBBool * FrBBool::_falseValue = new FrBBool(false);
