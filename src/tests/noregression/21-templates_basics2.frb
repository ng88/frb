DefLang EN



Public Class Main

    Public Shared Sub main()

        Dim t1 As TestA<Int> := New TestA<Int>(5)

        
    End Sub


    

End Class


Public Class Foo<T>
End Class

Public Class TestA<T>

    Protected elmt As TestB<T> := Nothing
    
    Public Sub Initialize(t As T)
        Debug.println(Debug.typename(elmt)) 
        'elmt := New TestB<T>(Me)
    End Sub
    
    Public Function getElmt() As TestB<T>
        Return elmt
    End Function
    
    Public Sub setA(t As Foo<Int>)
        'Debug.println(Debug.typename(elmt)  & " of " & Debug.typename(elmt.getElmt())) 
        'Dim a As Foo<Int> := t
    End Sub

End Class

Public Class TestB<T>

    Protected elmt As TestA<T> := Nothing
    
    Public Sub Initialize(t As TestA<T>)
        'Debug.println(Debug.typename(elmt)  & " of " & Debug.typename(elmt.getElmt())) 
        elmt := Nothing
    End Sub
    
    Public Sub setV(t As TestA<T>)
        'Debug.println(Debug.typename(elmt)  & " of " & Debug.typename(elmt.getElmt())) 
        elmt := t
        
    End Sub
    
    Public Function getElmt() As TestA<T>
        Return elmt
    End Function
    
End Class


